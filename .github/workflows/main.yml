name: Build ANGLE - Android ARM64 (Chromium Sync Method - Inefficient Fallback)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_angle_android_arm64_chromium_sync:
    runs-on: ubuntu-latest
    # Add permissions for actions/upload-artifact if your repo requires it
    # permissions:
    #   contents: read
    #   actions: write

    env:
      DEPOT_TOOLS_PATH: depot_tools
      ANDROID_NDK_VERSION: r26d # 保持 r26d，虽然下载问题可能与版本无关
      TARGET_ANDROID_API_LEVEL: 34
      DEPOT_TOOLS_WINTOOLCHAIN: 0

    steps:
      - name: Checkout Chromium Source Code
        uses: actions/checkout@v4
        with:
          repository: chromium/chromium
          path: chromium
          fetch-depth: 1 # 仍然保持浅层检出，希望能加快 checkout 速度

      - name: Install depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "DEPOT_TOOLS=$(pwd)/depot_tools" >> $GITHUB_ENV
          echo "PATH=$PATH:$(pwd)/depot_tools" >> $GITHUB_ENV

      - name: Verify depot_tools in PATH
        run: |
          echo "PATH from ENV file: $PATH"
          which gclient

      - name: Install Android NDK
        run: |
          sudo apt-get update && sudo apt-get install -y wget unzip python3 --no-install-recommends
          NDK_FILENAME=android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux-x86_64.zip
          NDK_DOWNLOAD_URL=https://dl.google.com/android/repository/${NDK_FILENAME}
          NDK_EXTRACT_DIR=${{ github.workspace }}/android-ndk
          NDK_PATH_VERSIONED=${NDK_EXTRACT_DIR}/android-ndk-${{ env.ANDROID_NDK_VERSION }}

          echo "Downloading NDK from ${NDK_DOWNLOAD_URL}..."

          RETRY_COUNT=3 # 保持重试逻辑，以防网络问题仍然存在
          for i in $(seq 1 $RETRY_COUNT); do
            echo "Attempt $i: Downloading NDK..."
            wget --quiet ${NDK_DOWNLOAD_URL} -O ${NDK_FILENAME}
            if [ $? -eq 0 ]; then
              echo "NDK Downloaded successfully on attempt $i."
              break
            else
              echo "Download failed on attempt $i. Retrying in 5 seconds..."
              sleep 5
            fi
            if [ $i -eq $RETRY_COUNT ]; then
              echo "Download failed after $RETRY_COUNT attempts. Exiting."
              exit 1
            fi
          done


          echo "Extracting NDK to ${NDK_EXTRACT_DIR}..."
          unzip -q ${NDK_FILENAME} -d ${NDK_EXTRACT_DIR}
          rm ${NDK_FILENAME} # Clean up the zip file

          echo "ANDROID_NDK_HOME=$(pwd)/android-ndk/${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV # 注意这里是 ANDROID_NDK_HOME
          echo "PATH=$PATH:$(pwd)/android-ndk/${{ env.ANDROID_NDK_VERSION }}" >> $GITHUB_ENV # 再次添加到 PATH

          echo "ANDROID_NDK_ROOT=${NDK_PATH_VERSIONED}" >> $GITHUB_ENV # 仍然设置 ANDROID_NDK_ROOT，以防构建脚本需要
          echo "ANDROID_NDK_ROOT set to ${NDK_PATH_VERSIONED}"

      - name: Configure gclient
        working-directory: chromium
        run: gclient config https://chromium.googlesource.com/chromium/chromium.git

      - name: Sync Chromium Dependencies (This will take a LONG time)
        working-directory: chromium
        run: gclient sync -j$(nproc) # 同步 Chromium 及其所有依赖，非常耗时

      - name: Configure ANGLE Build (GN) - Android ARM64
        working-directory: chromium/third_party/angle
        run: |
          gn gen out/Android_ARM64 --args='target_os="android" target_cpu="arm64" android_ndk_root="'$ANDROID_NDK_ROOT'" android_ndk_api_level=$TARGET_ANDROID_API_LEVEL is_debug=false angle_build_gl=false angle_build_gles=true angle_build_vulkan=true angle_build_d3d=false angle_build_metal=false' # 注意 NDK_ROOT 的传递方式

      - name: Build ANGLE (Ninja) - Android ARM64
        working-directory: chromium/third_party/angle
        run: ninja -C out/Android_ARM64 angle_library -j$(nproc) # 构建 angle_library 目标

      - name: Upload Build Artifacts - Android ARM64
        uses: actions/upload-artifact@v4
        with:
          name: angle-android-arm64-release-build-chromium-sync
          path: chromium/third_party/angle/out/Android_ARM64/libangle.so # 上传 libangle.so 库文件