      - name: Install Build Dependencies (Using install-build-deps.py)
        working-directory: angle # Corrected working directory
        run: |
          sudo apt-get update
          python3 angle/build/install-build-deps.py --no-prompt

      - name: Install vpython deps
        working-directory: angle # Corrected working directory
        run: |
          vpython tools/android/install-android-sdk.py --android_api_level $TARGET_ANDROID_API_LEVEL

      - name: Clean Build Directory
        working-directory: angle  # Corrected working directory
        run: |
          rm -rf out/Android_ARM64/*
          echo "Build directory cleaned."

      - name: Verify NDK Location After Sync
        working-directory: angle # Corrected working directory
        run: |
          NDK_PATH=$(find . -name "ndk" -type d -print -quit)
          if [ -z "$NDK_PATH" ]; then
            echo "ERROR: NDK directory not found after gclient sync. Check gclient sync output and ensure the 'ndk' directory exists in the ANGLE tree as configured by ANGLE's DEPS file. If sync succeeded, NDK may not be needed until GN generation."
            exit 1
          else
            echo "NDK found at: $NDK_PATH"
            export ANDROID_NDK_HOME="$NDK_PATH"
            echo "ANDROID_NDK_HOME set to: $ANDROID_NDK_HOME"
            echo "NDK directory location depends on the ANGLE DEPS file."
          fi

      - name: Configure ANGLE Build (GN) - Android ARM64
        working-directory: angle # Corrected working directory
        run: |
          gn gen out/Android_ARM64 --args='target_os="android" target_cpu="arm64" android_ndk_api_level=$TARGET_ANDROID_API_LEVEL is_debug=false angle_build_gl=false angle_build_gles=true angle_build_vulkan=true angle_build_d3d=false angle_build_metal=false'
          cat out/Android_ARM64/args.gn
          echo "ANGLE build configuration generated."

      - name: Build ANGLE (Ninja) - Android ARM64
        working-directory: angle # Corrected working directory
        run: |
          ninja -C out/Android_ARM64 angle_library -j${{ env.NINJA_JOBS }}
          echo "ANGLE library built."

      - name: Upload Build Artifacts - Android ARM64
        uses: actions/upload-artifact@v4
        with:
          name: angle-android-arm64-release-build-gclient-ndk
          path: angle/out/Android_ARM64/libangle.so
          if-no-files-found: error
